Host stuff
==========

apt install qemu-kvm qemu-system-x86 qemu-utils vde2

wget https://dl-cdn.alpinelinux.org/alpine/v3.16/releases/x86_64/alpine-standard-3.16.0-x86_64.iso

qemu-img create -f qcow2 alpine.img 4G

# -spice enables the virt manager remote desktop thing
# -vnc enables vnc
# -curses used to work, but it boots in graphical mode for some reason

qemu-system-x86_64 -machine 'q35,accel=kvm' -accel kvm -boot order=dc -m 1G -hda alpine.img -cdrom alpine-standard-3.16.0-x86_64.iso
qemu-system-x86_64 -machine 'q35,accel=kvm' -accel kvm -boot order=c -m 1G -hda alpine.img 
ctrl-alt-- and ctrl-alt-+ to shrink/grow screen

Guest
=====

login with root

ro
ro-std
ftpsync
[enter until you get to new password]
alpine
[continent]/[country]
[enter for whatever this question was]
f
alpine
[enter]
[password]
none
openssh
sda
sys
y

reboot

After reboot
------------

su
sed -i /etc/apk/repositories -e '/3\.16\/community/s/# //'
apk add python3 openssh-server pure-ftpd bash openrc  pure-ftpd-openrc git py-dateutil
rc-update add pure-ftpd
sed -i /etc/pure-ftpd.conf -e '/ChrootEveryone/s/yes/no/'
sed -i /etc/pure-ftpd.conf -e '/NoAnonymous/s/no/yes/'
sed -i /etc/pure-ftpd.conf -e '/UnixAuthentication/s/# //'
sed -i /etc/pure-ftpd.conf -e '/UnixAuthentication/s/no/yes/'
sed -i /etc/conf.d/pure-ftpd -e '/IS_CONFIGURED/c\
IS_CONFIGURED=yes\
.'
sed -i /etc/conf.d/pure-ftpc -e '/MISC_OTHERS/c\
MISC_OTHERS="-E -j"\
.'
install -d -m 755 -o alpine -g alpine /home/alpine
install -d -m 700 -o alpine -g alpine /home/alpine/.ssh
rc-service pure-ftpd start
sed -i /etc/ssh/sshd_config -e '/PasswordAuthentication/c\
PasswordAuthentication no\
.
/KbdInteractiveAuthentication/c\
KbdInteractiveAuthentication no\
.'
rc-service sshd restart
cd /root
git clone https://github.com/curl/curl.git
cd /root/curl
apk add autoconf make gcc automake libssh2 libtool musl-dev libssh2-dev
autoreconf -fi
./configure --with-openssl --with-libssh2
make
make install
# ^D no more root


Scrt1
crti
ssp_nonshared

ssh-keygen -t ed25519
cat ~/.ssh/id_ed25519.pub > ~/.ssh/authorized_keys
chmod 600 ~/.ssh/authorized_keys

clone the repo
